name: X-Action
description: X-Action
inputs:
  entrypoint:
    description: script for execution with bash
    required: false
  before:
    description: shellcode before execution of entrypoint
    required: false
  after:
    description: shellcode after execution of entrypoint
    required: false
  shellcode:
    description: bash code for execution
    required: false
  ref:
    description: checkout ref
    required: false
  docker_username:
    description: Username for Docker login
    required: false
  docker_password:
    description: Password for Docker login
    required: false
  buildx_init:
    description: buildx init
    required: false
  ssh_key:
    description: ssh key
    required: false
  git_user:
    description: Git Commit Username
    required: false
  git_email:
    description: Git Commit Email
    required: false
    
runs:
  using: "composite"
  steps:
    - name: x-cmd installation
      run: eval "$(curl https://get.x-cmd.com/dev)" 2>/dev/null || true; ___X_CMD_IN_CHINA_NET=; echo "$input"
      shell: bash
      env:
        input: ${{ toJSON( inputs ) }}
    - name: Init ssh agent
      uses: webfactory/ssh-agent@v0.5.4
      if: ${{ inputs.ssh_key != null }}
      with:
        ssh-private-key: ${{ inputs.ssh_key }}
    - name: Add ssh key
      run: |
        echo "github.com,52.74.223.119 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=" >> ~/.ssh/known_hosts
        echo "gitee.com,180.97.125.228 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMuEoYdx6to5oxR60IWj8uoe1aI0X1fKOHWOtLqTg1tsLT1iFwXV5JmFjU46EzeMBV/6EmI1uaRI6HiEPtPtJHE=" >> ~/.ssh/known_hosts
        echo "$ssh_key" >> ~/.ssh/id_rsa
        chmod 600 ~/.ssh/known_hosts ~/.ssh/id_rsa
        ssh-add ~/.ssh/id_rsa
      if: ${{ inputs.ssh_key != null }}
      env:
        ssh_key: ${{ inputs.ssh_key }}
      shell: bash
    - name: Git Init And Config user and email
      run: |
        [ -n "${{ inputs.git_user }}" ] && git config --global user.name '${{ inputs.git_user }}'
        [ -n "${{ inputs.git_email }}" ] && git config --global user.email '${{ inputs.git_email }}'
        git clone --branch ${{ inputs.ref || github.ref_name }} ${{ github.event.repository.ssh_url }}
      shell: bash
    - name: Docker login
      run: docker login -u "${{ inputs.docker_username }}" -p "${{ inputs.docker_password }}"
      if: ${{ (inputs.docker_username != null) && (inputs.docker_password != null) }}
      shell: bash
    - name: Docker buildx init
      run: docker buildx create --use
      if: ${{ inputs.buildx_init != null }}
      shell: bash
    - name: Running Script
      run: |
          set +o errexit; . $HOME/.x-cmd/.boot/boot
          ${{ inputs.before }}
          . "$___X_CMD_INSIDE_GITHUB_ACTION"
          ${{ inputs.after }}
      if: ${{ (inputs.entrypoint != null) || (hashFiles( format( '.x-cmd/{0}', github.job ) ) != '' ) }}
      env:
        ___X_CMD_INSIDE_GITHUB_ACTION: ${{ inputs.entrypoint || format( '.x-cmd/{0}', github.job ) }}
      shell: bash
    - name: Running Code
      run: |
          set +o errexit; . $HOME/.x-cmd/.boot/boot; ___X_CMD_INSIDE_GITHUB_ACTION=___shellcode___
          ${{ inputs.shellcode }}
      if: ${{ inputs.shellcode != null }}
      shell: bash
